// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuizApp_Task.Auth;

#nullable disable

namespace QuizApp_Task.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("QuizApp_Task.Entities.AnswerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("tbl_answer");
                });

            modelBuilder.Entity("QuizApp_Task.Entities.QuestionEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("varchar(5000)");

                    b.Property<string>("QuestionType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("QuizId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("tbl_question");
                });

            modelBuilder.Entity("QuizApp_Task.Entities.QuizEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("ThumbnailUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("tbl_quiz");
                });

            modelBuilder.Entity("QuizApp_Task.Entities.AnswerEntity", b =>
                {
                    b.HasOne("QuizApp_Task.Entities.QuestionEntity", "QuestionEntity")
                        .WithMany("AnswerEntities")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionEntity");
                });

            modelBuilder.Entity("QuizApp_Task.Entities.QuestionEntity", b =>
                {
                    b.HasOne("QuizApp_Task.Entities.QuizEntity", "QuizEntity")
                        .WithMany("QuestionEntities")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuizEntity");
                });

            modelBuilder.Entity("QuizApp_Task.Entities.QuestionEntity", b =>
                {
                    b.Navigation("AnswerEntities");
                });

            modelBuilder.Entity("QuizApp_Task.Entities.QuizEntity", b =>
                {
                    b.Navigation("QuestionEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
